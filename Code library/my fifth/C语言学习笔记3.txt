项目 ->属性 -> c/c++ -> 预处理器 -> 点击预处理器定义，加入_CRT_SECURE_NO_WARNINGS

C语言函数分类：
1，库函数
2，自定义函数

库函数：C语言本身提供给我们的函数
C语言库函数的类型都有：
IO函数
字符串操作函数
字符操作函数
内存操作函数
时间/日期函数
数学函数
其他函数

自定义函数：程序员自己创建的函数
与库函数一样，有函数名，返回值和函数参数
int add(int x, int y)      //int：函数返回类型。 add：函数名。 in x int y：函数参数
{
	int z ;
	z = x + y;    //函数体
	return z;
}

实际参数（实参）：
真实传给函数的参数 叫实参
形式参数（形参）：是指函数名后括号中的变量(当被调用完毕时，就会被销毁）
结论：往往是实参传给形参，形参是实参的一份拷贝，形参修改不会影响实参。

函数调用类型：
函数的形参和实参占用不同的参数。
传值调用：
将值传给形参，不会影响实参。
传址调用：
将函数外部创建的内存地址传给函数参数的一种方式。可以将函数外部与函数内部联系起来。
如果要改变函数外部就用传址，如果只获取一个参数，就传值。


函数的嵌套调用和链式访问
函数与函数之间可以组合在一起
嵌套调用：
//写一个嵌套调用
#include <stdio.h>

void one()
{
	printf("hello\n");
}

void two()
{
	int i = 0;
	for ( i = 0; i < 3; i++)
	{
		one();
	}

}

int main()
{
	two();
	return 0;
}
链式访问
把一个函数的返回值当作另一个函数的值


函数的声明和定义：
函数声明：
1.告诉编译器有一个函数加什么，参数是什么，返回类型是什么。
2.函数的声明要满足 先声明再使用
3.函数声明一般要放在头文件中
函数定义：
函数的定义时交代函数的功能实现

函数的申明写法：
头文件：

#ifndef __ADD_H__//ifndef 如果没有被定义意思 判断语句
#define __ADD_H__//定义这个函数
//函数的声明
int Add(int x, int y);

#endif 

定义部分（.c格式的头文件）
int add(int x, int y)
{

	return x + y;
}

调用时：
#include "Add.h"//自己定义的函是加"",而非<>



函数递归
递归的含义：
程序调用自己的编程技巧称为递归.递归主要方式就是把大事化小

递归两个主要条件：
1.存在限制条件，当满足这个限制条件时 就不再执行。
2.每次递归带调用都会越来越接近这个限制条件。